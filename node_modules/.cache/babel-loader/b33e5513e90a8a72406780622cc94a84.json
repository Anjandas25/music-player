{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anjan\\\\Desktop\\\\DEV ED React Projects\\\\music-player\\\\src\\\\components\\\\Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faPause, faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = ({\n  currentSong,\n  setIsPlaying,\n  isPlaying,\n  audioRef\n}) => {\n  _s();\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  }; // Using State \n\n\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0\n  }); // Event Handler\n\n  const timeUpdateHandler = e => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo,\n      currentTime: current,\n      duration\n    });\n  }; //To Show Time Nicely\n\n\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  };\n\n  const dragHandler = e => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo,\n      currentTime: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        min: 0,\n        max: songInfo.duration,\n        value: songInfo.currentTime,\n        onChange: dragHandler,\n        type: \"range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.duration)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play\",\n        icon: isPlaying ? faPause : faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Player, \"tETPtaZj/mSKxQkT5AtEK69UAtI=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Users/Anjan/Desktop/DEV ED React Projects/music-player/src/components/Player.js"],"names":["React","useRef","useState","FontAwesomeIcon","faPlay","faPause","faAngleLeft","faAngleRight","Player","currentSong","setIsPlaying","isPlaying","audioRef","playSongHandler","current","pause","play","songInfo","setSongInfo","currentTime","duration","timeUpdateHandler","e","target","getTime","time","Math","floor","slice","dragHandler","value"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n\r\nimport {faPlay, faPause, faAngleLeft, faAngleRight} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Player = ({currentSong, setIsPlaying, isPlaying, audioRef}) => {\r\n\r\n\r\n    const playSongHandler =()=>{\r\n        \r\n        if (isPlaying) {\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying)\r\n        } else {\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying)\r\n        }\r\n}\r\n    // Using State \r\n    const [songInfo, setSongInfo] = useState({\r\n        currentTime: 0,\r\n        duration: 0,\r\n    })\r\n  \r\n    // Event Handler\r\n    const timeUpdateHandler = (e) =>{\r\n        const current = e.target.currentTime;\r\n        const duration = e.target.duration;\r\n        setSongInfo({...songInfo, currentTime:current, duration})\r\n    }\r\n\r\n    //To Show Time Nicely\r\n    const getTime =(time)=>{\r\n        return (\r\n            Math.floor(time /60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        )\r\n    };\r\n\r\n    const dragHandler =(e)=>{\r\n        audioRef.current.currentTime = e.target.value;\r\n        setSongInfo({...songInfo, currentTime: e.target.value})\r\n    }\r\n    \r\n    return (\r\n        <div className=\"player\">\r\n           <div className=\"time-control\">\r\n            <p>{getTime(songInfo.currentTime)}</p>\r\n            <input\r\n            min={0}\r\n            max={songInfo.duration}\r\n            value={songInfo.currentTime}\r\n            onChange={dragHandler}\r\n            type=\"range\"\r\n            />\r\n\r\n            <p>{getTime(songInfo.duration)}</p>\r\n           </div>\r\n           <div className=\"play-control\">\r\n               <FontAwesomeIcon className=\"skip-back\" size=\"2x\" icon={faAngleLeft}/>\r\n                <FontAwesomeIcon\r\n                onClick={playSongHandler}\r\n                className=\"play\"\r\n                icon={isPlaying ? faPause : faPlay}/>\r\n                <FontAwesomeIcon className=\"skip-forward\" size=\"2x\" icon={faAngleRight}/>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;\r\n"]},"metadata":{},"sourceType":"module"}