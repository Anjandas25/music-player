{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anjan\\\\Desktop\\\\DEV ED React Projects\\\\music-player\\\\src\\\\components\\\\LibrarySong.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LibrarySong = ({\n  song,\n  songs,\n  setCurrentSong,\n  isPlaying,\n  audioRef,\n  id\n}) => {\n  const songSelectHandler = () => {\n    const selectedSong = songs.filter(state => state.id === id);\n    setCurrentSong(selectedSong[0]);\n    audioRef.current.play(); //Check if the Song is Playing\n\n    if (isPlaying) {\n      const playPromise = audioRef.current.play();\n\n      if (playPromise !== undefined) {\n        playPromise.then(audio => {\n          audioRef.current.play();\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: songSelectHandler,\n    className: \"library-song\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: song.cover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_c = LibrarySong;\nexport default LibrarySong;\n\nvar _c;\n\n$RefreshReg$(_c, \"LibrarySong\");","map":{"version":3,"sources":["C:/Users/Anjan/Desktop/DEV ED React Projects/music-player/src/components/LibrarySong.js"],"names":["React","LibrarySong","song","songs","setCurrentSong","isPlaying","audioRef","id","songSelectHandler","selectedSong","filter","state","current","play","playPromise","undefined","then","audio","cover","name","artist"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,cAAd;AAA8BC,EAAAA,SAA9B;AAAyCC,EAAAA,QAAzC;AAAmDC,EAAAA;AAAnD,CAAD,KAA4D;AAE5E,QAAMC,iBAAiB,GAAG,MAAI;AAC1B,UAAMC,YAAY,GAAGN,KAAK,CAACO,MAAN,CAAcC,KAAD,IAAWA,KAAK,CAACJ,EAAN,KAAaA,EAArC,CAArB;AACAH,IAAAA,cAAc,CAACK,YAAY,CAAC,CAAD,CAAb,CAAd;AACAH,IAAAA,QAAQ,CAACM,OAAT,CAAiBC,IAAjB,GAH0B,CAK1B;;AACA,QAAIR,SAAJ,EAAc;AACV,YAAMS,WAAW,GAAGR,QAAQ,CAACM,OAAT,CAAiBC,IAAjB,EAApB;;AACA,UAAIC,WAAW,KAAKC,SAApB,EAA+B;AAC3BD,QAAAA,WAAW,CAACE,IAAZ,CAAkBC,KAAD,IAAS;AACtBX,UAAAA,QAAQ,CAACM,OAAT,CAAiBC,IAAjB;AACH,SAFD;AAGH;AACJ;AACJ,GAdD;;AAgBA,sBACI;AAAK,IAAA,OAAO,EAAEL,iBAAd;AAAiC,IAAA,SAAS,EAAC,cAA3C;AAAA,4BACI;AAAK,MAAA,GAAG,EAAEN,IAAI,CAACgB;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACA;AAAA,kBAAKhB,IAAI,CAACiB;AAAV;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,kBAAKjB,IAAI,CAACkB;AAAV;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA3BD;;KAAMnB,W;AA6BN,eAAeA,WAAf","sourcesContent":["import React from 'react';\r\n\r\nconst LibrarySong = ({song, songs, setCurrentSong, isPlaying, audioRef, id}) => {\r\n\r\n    const songSelectHandler = ()=>{\r\n        const selectedSong = songs.filter((state) => state.id === id);\r\n        setCurrentSong(selectedSong[0])\r\n        audioRef.current.play()\r\n    \r\n        //Check if the Song is Playing\r\n        if (isPlaying){\r\n            const playPromise = audioRef.current.play();\r\n            if (playPromise !== undefined) {\r\n                playPromise.then((audio)=>{\r\n                    audioRef.current.play()\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div onClick={songSelectHandler} className=\"library-song\">\r\n            <img src={song.cover}></img>\r\n            <div className=\"song-description\">\r\n            <h3>{song.name}</h3>\r\n            <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LibrarySong;\r\n"]},"metadata":{},"sourceType":"module"}